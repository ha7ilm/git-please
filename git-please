#!/usr/bin/python2

"""
Copyright 2018 Retzler Andras <randras@sdr.hu>

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
"""

import sys, pyfzf

fzf = pyfzf.FzfPrompt()

params = sys.argv[1:]
if sys.argv[0]=="git": params=params[1:] #works with both ./git-please and git please

pcommands = [ \
        [ "undo all changes since last commit (and lose any changes to any file modified)", "git reset HEAD --hard"], \
        [ "list any file modified", "git status --short -uno"], \
        [ "show all remotes", "git remote -v"], \
        [ "change the URL/path of an existing remote repository", "git remote set-url <remote> <url>"], \
        [ "create new repository", "git init"], \
        [ "clone repository to given directory", "git clone <url> <directory>"], \
        [ "show files modified since the last commit", "git status"], \
        [ "upload changes to server", "git push"], \
        [ "checkout a single file without changing all the other files", "git checkout HEAD <name_of_file>", "https://stackoverflow.com/a/2466755/3182453"], \
        [ "see/find/list the commits from all branches", "git log --graph --decorate --all"], \
        [ "see/find/list the commits in a tree view", "git log --graph --decorate"], \
        [ "see/find/list the commits from the current branch only", "git log"], \
        [ "change commit message of the last commit (without changing the contents of the last commit)", "git commit --amend"], \
        [ "commit without opening up the text editor to edit commit message", "git commit -m \"your commit message\""], \
        [ "undo changes to a single file since last commit", "git checkout -- file"], \
        [ "undo last commit", """git reset HEAD~                             
<< edit files as necessary >>               
git add <any files you want to add>                                 
git commit -c ORIG_HEAD""", "https://stackoverflow.com/a/927386/3182453"], \
        ]

lcommands = map(lambda x: x[0], pcommands)
# result = fzf.prompt(lcommands, "--query=\""+("\\ ".join(params))+"\"")
result = fzf.prompt(lcommands, "--query=\""+" ".join(params)+"\"")
for c in pcommands:
    if c[0] == result[0]:
        print "\x1B[34m"+c[0]+"\x1B[39m"
        print c[1]
        break 
